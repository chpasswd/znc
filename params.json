{"body":"## Table of contents\r\n\r\n- Minimal Requirements\r\n- Optional Requirements\r\n- Installing ZNC\r\n- Setting up znc.conf\r\n- Special config options\r\n- Using ZNC\r\n- File Locations\r\n- ZNC's config file\r\n- Writing own modules\r\n- Further infos\r\n\r\n## Minimal Requirements\r\n\r\nCore:\r\n\r\n - GNU make (try gmake if make fails)\r\n - GCC 3 or later\r\n\r\n## Optional Requirements\r\n\r\nSSL support:\r\n\r\n - openssl 0.9.7d or later (try installing openssl-dev, openssl-devel or\r\n   libssl-dev)\r\n\r\nmodperl:\r\n\r\n - This needs perl and its bundled libperl\r\n\r\nmodpython:\r\n\r\n - This needs perl(!) and python's bundled libpython\r\n\r\nsaslauth:\r\n\r\n - This module needs cyrus-sasl2\r\n\r\n## Installing ZNC\r\n\r\nInstallation is done with the `./configure ; make ; make install` commands.\r\n\r\nIf you are building from git, you will need to run `./autogen.sh` first to produce the `configure` script.\r\nNote that this requires `automake` to be installed.\r\n\r\nYou can use\r\n\t./configure --help\r\nif you want to get a list of options, though the defaults should be suiting\r\nmost needs. After you compiled it with make (or gmake if make doesn't work) you\r\ncan install it with\r\n\tmake install\r\nthough you don't need to as ZNC supports in-place execution.\r\n\r\n## Setting up znc.conf\r\n\r\nFor setting up a configuration file in `~/.znc` you can simply do\r\n\tznc --makeconf\r\nor\r\n\t./znc --makeconf\r\nfor in-place execution.\r\n\r\nIf you are using SSL you should do\r\n\tznc --makepem\r\n\r\n## Special config options\r\n\r\nWhen you create your ZNC configuration file via --makeconf, you are asked two\r\nquestions which might not be easy to understand.\r\n\r\n> Number of lines to buffer per channel\r\n\r\nHow many messages should be buffered for each channel. When you connect to ZNC\r\nyou get a buffer replay for each channel which shows what was said last. This\r\noption selects the number of lines this replay should consist of. Increasing\r\nthis can greatly increase ZNC's memory usage if you are hosting many users.\r\nThe default value should be fine for most setups.\r\n\r\n> Would you like to keep buffers after replay?\r\n\r\nIf this is disabled, you get the buffer playback only once and then it is\r\ndeleted. If this is enabled, the buffer is not deleted. This may be useful if\r\nyou regularly use more than one client to connect to ZNC.\r\n\r\n## Using ZNC\r\n\r\nOnce you have started ZNC you can connect with your favorite IRC-client to ZNC.\r\nYou should use `username:password` as the server password (e.g. `/pass user:pass`).\r\n\r\nOnce you are connected you can do `/msg *status help` for some commands.\r\nEvery module you have loaded (`/msg *status listmods`) should additionally provide\r\n\t/msg *modulename help\r\n\r\n## File Locations\r\n\r\nIn its data dir (`~/.znc` is default) ZNC saves most of its data. The only\r\nexception are modules and module data, which are saved in `<prefix>/lib/znc`\r\nand `<prefix>/share/znc`, and the znc binary itself.\r\nMore modules (e.g. if you install some later) can be saved in\r\n`<data dir>/modules` (-> `~/.znc/modules`).\r\n\r\nIn the datadir are only two files:\r\n\r\n- `znc.pid` - The pid of the currently running ZNC instance.\r\n- `znc.pem` - This is the server certificate ZNC uses for listening and is created\r\n with `znc --makepem`.\r\n\r\nThese directories are also in there:\r\n\r\n- configs - Contains `znc.conf` (ZNC's config file) and backups of older configs.\r\n- modules - ZNC also looks in here for a module.\r\n- moddata - Global modules save their settings here.\r\n  (e.g. webadmin saves the current skin name in here)\r\n- users   - This is per-user data and mainly contains just a moddata directory.\r\n\r\n## ZNC's config file\r\n\r\nThis file shouldn't be too hard too understand. An explanation of all the\r\nitems can be found on the [Configuration](http://wiki.znc.in/Configuration)-Page.\r\nWarning: better not to edit config, while ZNC is running.\r\n\r\nTo rehash the config file, you can send ZNC SIGHUP via\r\n\tpkill -SIGHUP znc\r\nor you can login to ZNC and use\r\n\t/msg *status rehash\r\n\r\nIf you changed some settings while ZNC is running, a simple\r\n\tpkill -SIGUSR1 znc\r\nwill make ZNC rewrite its config file. Alternatively you can use this:\r\n\t/msg *status saveconfig\r\n\r\n## Writing own modules\r\n\r\nYou can write your own modules in either C++, python or perl.\r\n\r\nC++ modules are compiled by either saving them in the modules source dir and\r\nrunning make or with the znc-buildmod shell script.\r\n\r\nFor additional info look in the wiki:\r\n\r\n- [Writing modules](http://wiki.znc.in/Writing_modules)\r\n\r\nPerl modules are loaded through the global module [ModPerl](http://wiki.znc.in/Modperl).\r\n\r\nPython modules are loaded through the global module [ModPython](http://wiki.znc.in/Modpython).\r\n\r\n## Further infos\r\n\r\nPlease visit http://znc.in/ or #znc on EFNet if you still have questions.\r\n\r\nYou can get the latest development version with git:\r\n\tgit clone git://github.com/znc/znc.git\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Znc","google":"","tagline":"Modified mirror for BlackZNC community."}